-- Here, I'm using SQL to analyze customer and order data from a multi-table database.

-- 1. How many orders were placed in January?
SELECT count(orderID) 
FROM bit_db.JanSales
WHERE length(orderID) = 6
AND orderid <> 'Order ID'

--2. How many of those orders were for an iPhone?
SELECT count(orderID)
FROM bit_db.JanSales
WHERE product ='iPhone' 
AND length(orderID) = 6
AND orderid <> 'Order ID'

--3. Select the customer account numbers for all the orders that were placed in February.
SELECT distinct cus.acctnum
FROM bit_db.FebSales feb
INNER JOIN bit_db.customers cus
ON cus.order_id = feb.orderID
WHERE acctnum <> '' 
AND length(orderID) = 6
AND orderid <> 'Order ID'

--4. Which product was the cheapest one sold in January, and what was the price?
SELECT distinct product, price
FROM bit_db.JanSales
GROUP BY product
ORDER BY price asc
LIMIT 1

--5. What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT product, sum(quantity) * price as revenue
FROM bit_db.JanSales
GROUP BY product

--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, quantity, sum(quantity) * price as revenue
FROM bit_db.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'

--7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count (distinct cus.acctnum), avg(feb.quantity * feb.price) as avg_amount
FROM bit_db.FebSales Feb
LEFT JOIN bit_db.customers cus
ON feb.orderid = cus.order_id
WHERE feb.quantity > 2
AND length(orderid) = 6 
AND orderid <> 'Order ID'
